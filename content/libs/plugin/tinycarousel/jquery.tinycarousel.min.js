!function (a) { function d(d, e) { function v() { return f.update(), f.move(f.slideCurrent), w(), f } function w() { f.options.buttons && (k.click(function () { return f.move(--q), !1 }), j.click(function () { return f.move(++q), !1 })), a(window).resize(f.update), f.options.bullets && d.on("click", ".bullet", function () { return f.move(q = +a(this).attr("data-slide")), !1 }) } function x() { f.options.buttons && !f.options.infinite && (k.toggleClass("disable", f.slideCurrent <= 0), j.toggleClass("disable", f.slideCurrent >= f.slidesTotal - o)), f.options.bullets && (l.removeClass("active"), a(l[f.slideCurrent]).addClass("active")) } this.options = a.extend({}, c, e), this._defaults = c, this._name = b; var f = this, g = d.find(".viewport:first"), h = d.find(".overview:first"), i = null, j = d.find(".next:first"), k = d.find(".prev:first"), l = d.find(".bullet"), m = 0, n = {}, o = 0, p = 0, q = 0, r = "x" === this.options.axis, s = r ? "Width" : "Height", t = r ? "left" : "top", u = null; return this.slideCurrent = 0, this.slidesTotal = 0, this.intervalActive = !1, this.update = function () { return h.find(".mirrored").remove(), i = h.children(), m = g[0]["offset" + s], p = i.first()["outer" + s](!0), f.slidesTotal = i.length, f.slideCurrent = f.options.start || 0, o = Math.ceil(m / p), h.append(i.slice(0, o).clone().addClass("mirrored")), h.css(s.toLowerCase(), p * (f.slidesTotal + o)), x(), f }, this.start = function () { return f.options.interval && (clearTimeout(u), f.intervalActive = !0, u = setTimeout(function () { f.move(++q) }, f.options.intervalTime)), f }, this.stop = function () { return clearTimeout(u), f.intervalActive = !1, f }, this.move = function (a) { return q = isNaN(a) ? f.slideCurrent : a, f.slideCurrent = q % f.slidesTotal, 0 > q && (f.slideCurrent = q = f.slidesTotal - 1, h.css(t, -f.slidesTotal * p)), q > f.slidesTotal && (f.slideCurrent = q = 1, h.css(t, 0)), n[t] = -q * p, h.animate(n, { queue: !1, duration: f.options.animation ? f.options.animationTime : 0, always: function () { d.trigger("move", [i[f.slideCurrent], f.slideCurrent]) } }), x(), f.start(), f }, v() } var b = "tinycarousel", c = { start: 0, axis: "x", buttons: !0, bullets: !1, interval: !1, intervalTime: 3e3, animation: !0, animationTime: 1e3, infinite: !0 }; a.fn[b] = function (c) { return this.each(function () { a.data(this, "plugin_" + b) || a.data(this, "plugin_" + b, new d(a(this), c)) }) } }(jQuery);